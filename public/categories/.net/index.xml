<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.NET on IEvangelist</title>
    <link>https://davidpine.net/categories/.net/</link>
    <description>Recent content in .NET on IEvangelist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://davidpine.net/categories/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# Special Edition</title>
      <link>https://davidpine.net/blog/csharp-special-edition/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://davidpine.net/blog/csharp-special-edition/</guid>
      <description>Welcome to the 17th day of the C# Advent Calendar . I&amp;rsquo;d like to take a moment to thank my fellow bloggers who are sharing their passion of C# with everyone following the C# Advent Calendar. Please, share this and their posts - help us all make C# even more widely adopted than it is today.
In the Beginning I&amp;rsquo;m honored to blog about my favorite programming language, C#. There is an often forgotten truth about the history of C#, one truth that I like talking about.</description>
    </item>
    
    <item>
      <title>Demystifying .NET Standard</title>
      <link>https://davidpine.net/blog/dot-net-standard-demystified/</link>
      <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://davidpine.net/blog/dot-net-standard-demystified/</guid>
      <description>Intro Monday, August 14th was an amazing day to be a .NET developer! As the world celebrates another triumphant series of announcements from Microsoft, there is still confusion amongst the masses.
What is this .NET Standard thing? What does it mean to target .NET Standard versus .NET Core, or even the .NET Framework? As a developer, what .NET should I target and why? Are Portable Class Libraries (PCLs) dead? Developer Community</description>
    </item>
    
    <item>
      <title>Perusing C# 7.1</title>
      <link>https://davidpine.net/blog/csharp-seven-dot-one/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://davidpine.net/blog/csharp-seven-dot-one/</guid>
      <description>Earlier this year in March &amp;ndash; Visual Studio 2017 was released. With this the world was given C# 7, checkout my post on Exploring C# 7. In this post we will peruse C# 7.1, the first incremental release while C# 8 is being fleshed out.
Async Main Since the release of C# 5, developers have either embraced the async and await keywords or fumbled along the way feebly attempting to comprehend them.</description>
    </item>
    
    <item>
      <title>Exploring C# 7</title>
      <link>https://davidpine.net/blog/exploring-csharp-seven/</link>
      <pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://davidpine.net/blog/exploring-csharp-seven/</guid>
      <description>Intro Since we have all been actively celebrating the 20th anniversary of Visual Studio, it felt appropriate to post about C# 7! In this post we will explore the features that make C# 7 so promising. I&amp;rsquo;ve put together a demonstration C# 7 project, that is available here .
This post contains examples and details on five of the nine new C# 7 features.
Pattern matching out variables Tuples Local functions throw expressions These are the remaining features, that I do not cover in this post.</description>
    </item>
    
  </channel>
</rss>
